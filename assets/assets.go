// Code generated by "esc -o=assets/assets.go -pkg=assets -include=.+\.ttf assets"; DO NOT EDIT.

package assets

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	if !f.isDir {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is not directory", f.name)
	}

	fis, ok := _escDirs[f.local]
	if !ok {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is directory, but we have no info about content of this dir, local=%s", f.name, f.local)
	}
	limit := count
	if count <= 0 || limit > len(fis) {
		limit = len(fis)
	}

	if len(fis) == 0 && count > 0 {
		return nil, io.EOF
	}

	return fis[0:limit], nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/assets/GlacialIndifference-Regular.ttf": {
		name:    "GlacialIndifference-Regular.ttf",
		local:   "assets/GlacialIndifference-Regular.ttf",
		size:    33084,
		modtime: 1558258674,
		compressed: `
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
lUtve/D/FwAA//+pogaLPIEAAA==
`,
	},

	"/assets": {
		name:  "assets",
		local: `assets`,
		isDir: true,
	},
}

var _escDirs = map[string][]os.FileInfo{

	"assets": {
		_escData["/assets/GlacialIndifference-Regular.ttf"],
	},
}
